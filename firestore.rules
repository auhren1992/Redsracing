rules_version = '2';
service cloud.firestore {

  // Helper functions
  function signedIn() {
    return request.auth != null;
  }

  function isTeamMember() {
    return request.auth.token.role == 'team-member';
  }

  function isTeamRedFollower() {
    return request.auth.token.role == 'TeamRedFollower';
  }

  function isOwner(userId) {
    return request.auth.uid == userId;
  }

  function isApproved(data) {
    return data.approved == true;
  }

  match /databases/{database}/documents {

    // USERS: Publicly readable user profiles.
    // Read: Anyone can read.
    // Create/Update: Owner-only.
    // Delete: Team members only.
    match /users/{userId} {
      allow read;
      allow create, update: if isOwner(userId);
      allow delete: if isTeamMember();

      // Achievements subcollection within user profiles
      // Read: Anyone can read user achievements
      // Write: Only team members can assign/manage achievements
      match /achievements/{achievementId} {
        allow read;
        allow write: if isTeamMember();
      }
    }

    // SUBSCRIBERS: Email subscriptions
    // Create: Anyone can create (subscribe).
    // Read/Update/Delete: No one on the client-side.
    match /subscribers/{subId} {
      allow create;
      allow read, update, delete: if false;
    }

    // RACES: Race schedule and results
    // Read: Anyone can read.
    // Write: Only team members can manage races.
    match /races/{raceId} {
      allow read;
      allow write: if isTeamMember();
    }

    // DRIVER_NOTES: Private notes for team members
    // Read/Write: Only the owner of the notes can access them.
    match /driver_notes/{userId} {
      allow read, write: if signedIn() && isOwner(userId);
    }

    // GALLERY_IMAGES: User-submitted photos
    // Read: Approved photos are public; unapproved are visible to owner and team members.
    // Create: Authenticated users can submit photos.
    // Update: Owner can edit their unapproved photos; team members can edit any.
    // Delete: Owner can delete their unapproved photos; team members can delete any.
    match /gallery_images/{imageId} {
      allow read: if isApproved(resource.data) || 
                     (signedIn() && isOwner(resource.data.uploaderUid)) ||
                     isTeamMember();
      allow create: if signedIn() && 
                       request.resource.data.uploaderUid == request.auth.uid &&
                       request.resource.data.approved == false;
      allow update: if (signedIn() && isOwner(resource.data.uploaderUid) && resource.data.approved == false) ||
                       isTeamMember();
      allow delete: if (signedIn() && isOwner(resource.data.uploaderUid) && resource.data.approved == false) ||
                       isTeamMember();

      // Comments subcollection
      match /comments/{commentId} {
        allow read: if isApproved(get(/databases/$(database)/documents/gallery_images/$(imageId)).data) || 
                       (signedIn() && isOwner(get(/databases/$(database)/documents/gallery_images/$(imageId)).data.uploaderUid)) ||
                       isTeamMember();
        allow create: if signedIn() && 
                         request.resource.data.authorUid == request.auth.uid;
        allow update, delete: if signedIn() && (isOwner(resource.data.authorUid) || isTeamMember());
      }

      // Likes subcollection  
      match /likes/{likeId} {
        allow read: if isApproved(get(/databases/$(database)/documents/gallery_images/$(imageId)).data) || 
                       (signedIn() && isOwner(get(/databases/$(database)/documents/gallery_images/$(imageId)).data.uploaderUid)) ||
                       isTeamMember();
        allow create, delete: if signedIn() && isOwner(likeId);
      }
    }

    // QNA_SUBMISSIONS: Fan questions and answers
    // Read: Published Q&As are public.
    // Create: Any authenticated user can submit a question.
    // Update/Delete: Only team members can manage submissions.
    match /qna_submissions/{qnaId} {
      allow read: if resource.data.status == 'published' || isTeamMember();
      allow create: if signedIn();
      allow update, delete: if isTeamMember();
    }

    // INVITATION_CODES: Special codes for team access
    // Read/Write: Only team members can manage invitation codes.
    match /invitation_codes/{codeId} {
      allow read, write: if isTeamMember();
    }

    // ACHIEVEMENTS: Available achievements/badges
    // Read: Anyone can read achievements.
    // Write: Only team members can manage achievements.
    match /achievements/{achievementId} {
      allow read;
      allow write: if isTeamMember();
    }

    // JONNY_VIDEOS: Jonny's video collection for team management
    // Read: Publicly readable.
    // Write: Only team members can manage Jonny's videos.
    match /jonny_videos/{videoId} {
      allow read;
      allow write: if isTeamMember();
    }
  }
}
