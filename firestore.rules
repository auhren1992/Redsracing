rules_version = '2';
service cloud.firestore {

  // Helper function to check for team member role
  function isTeamMember() {
    return request.auth.token.role == 'team-member';
  }

  match /databases/{database}/documents {

    // Default deny all access unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS: Public user data
    // Read: Anyone can read public profiles
    // Write: User can create their own profile, team members can update any profile.
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
       allow update: if request.auth.uid == userId || isTeamMember();
    }

    // SUBSCRIBERS: Email subscriptions
    // Create: Anyone can create (subscribe).
    // Read/Update/Delete: No one on the client-side.
    match /subscribers/{subId} {
      allow create;
      allow read, update, delete: if false;
    }

    // RACES: Race schedule and results
    // Read: Anyone can read the race schedule.
    // Write: Only team members can manage races.
    match /races/{raceId} {
      allow read;
      allow write: if isTeamMember();
    }

    // DRIVER_NOTES: Private notes for team members
    // Read/Write: Only the authenticated user can access their own notes.
    match /driver_notes/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // GALLERY_IMAGES: User-submitted photos
    // Read: Anyone can see approved photos.
    // Create: Any authenticated user can submit a photo for approval.
    // Update: Only team members can update (e.g., to approve a photo).
    // Delete: Only team members can delete photos.
    match /gallery_images/{imageId} {
      allow read: if resource.data.approved == true || isTeamMember();
      allow create: if request.auth != null;
      allow update, delete: if isTeamMember();
    }

    // QNA_SUBMISSIONS: Fan questions and answers
    // Read: Anyone can read published Q&As.
    // Create: Any authenticated user can submit a question.
    // Update/Delete: Only team members can manage submissions (answer, publish, delete).
    match /qna_submissions/{qnaId} {
      allow read: if resource.data.status == 'published' || isTeamMember();
      allow create: if request.auth != null;
      allow update, delete: if isTeamMember();
    }

    // INVITATION_CODES: Special codes for team access
    // No client-side access. These are managed by backend functions or manually in the console.
    match /invitation_codes/{codeId} {
        allow read, write: if false;
    }
  }
}
