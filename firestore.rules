rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Subscribers: Anyone can sign up, but no one can read the list.
    match /subscribers/{subscriberId} {
      allow read: if false;
      allow write: if true;
    }

    // Races: Anyone can read the race schedule, only team members can change it.
    match /races/{raceId} {
      allow read: if true;
      allow write: if request.auth.token.role == 'team-member';
    }

    // Driver Notes: Only the authenticated user can read/write their own notes.
    match /driver_notes/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Invitation Codes: Only accessible by backend functions.
    match /invitation_codes/{code} {
      allow read, write: if false;
    }

    // Gallery Images: Anyone can read approved images.
    // Any authenticated user can create a new image document.
    // Only the uploader or a team member can delete an image.
    match /gallery_images/{imageId} {
      allow read: if resource.data.approved == true;
      allow create: if request.auth != null;
      allow update: if request.auth.token.role == 'team-member'; // for approvals
      allow delete: if request.auth.uid == resource.data.uploaderUid || request.auth.token.role == 'team-member';
    }
  }
}